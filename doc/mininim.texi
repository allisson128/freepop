\input texinfo  @c -*-texinfo-*-
@c
@c mininim.texi -- The MININIM Manual
@c
@c Copyright (C) 2016 Bruno Félix Rezende Ribeiro <oitofelix@gnu.org>
@c
@c Permission is granted to copy, distribute and/or modify this
@c document under the terms of the GNU Free Documentation License,
@c Version 1.3 or any later version published by the Free Software
@c Foundation; with no Invariant Sections.
@c
@c You should have received a copy of the GNU Free Documentation
@c License along with this program.  If not, see
@c <http://www.gnu.org/licenses/>.
@c

@c %**start of header
@setfilename mininim.info
@documentencoding UTF-8
@c @documentlanguage en_US
@firstparagraphindent insert
@footnotestyle end
@include release.texi
@settitle MININIM
@set manual
@set GNUphiThird
@c %**end of header





@include copying.texi





@c --- Info directory entry;
@dircategory Games
@direntry
* MININIM: (mininim).   The Advanced Prince of Persia Engine.
@end direntry





@c --- Info Top Node;
@ifnottex
@node Top
@top MININIM: The Advanced Prince of Persia Engine
@insertcopying
@end ifnottex





@c --- Menu;
@menu
* Constructions:: The matter the world is made of
* Movements:: How the kid reacts to user input



@c * Preface::    Motivation, program definition and document organization;

@c * Overview::   Description, distribution, obtaining, contact, bug reports,
@c                 contribution, donation and hacking;
@c * Release::    Information specifically relevant for the current release;

@c Appendices:
@c * GNU Free Documentation License:: The license for this documentation;

@c GNU philosophy:
@c * The GNU Manifesto::
@c * The GNU Project::
@c * Linux and the GNU system::
@c * Why Software Should Not Have Owners::
@c * Why Free Software Needs Free Documentation::

Indexes:
* Index:: Concepts and reference material.
@end menu





@c --- Title page;
@finalout
@titlepage
@title @value{package} @value{version}
@subtitle The Advanced Prince of Persia Engine (a childhood dream)
@sp 6
@center @image{mininim-figures/mininim,2in}
@author Bruno Félix Rezende Ribeiro <@email{oitofelix@@gnu.org}>
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage





@c --- Table of contents;
@contents





@c --- Constructions;
@node Constructions
@chapter Constructions
@cindex constructions

Each @dfn{level} is comprised of @dfn{rooms}@footnote{The terminology
used for @dfn{rooms} in the original game is @dfn{screens}.}.  Each room
is comprised of three @dfn{floors}.  Each floor is comprised of 10
@dfn{places}.  Each place holds a @dfn{construction} (or @dfn{con} for
short).@footnote{The terminology used for @dfn{constructions} in the
original game is @dfn{tiles}.}  The following figure illustrates this
arrangement.

@center @image{mininim-figures/level-layout}

Therefore, any given construction is uniquely identified within a level
by its coordinates, which are defined as the triplet @emph{room},
@emph{floor} and @emph{place}.

Constructions are comprised of three elements: foreground, background
and extension.  A @dfn{construction foreground} is the physical part the
kid interacts with.  Physical properties determined by it are collision,
hang and fall conditions, to name a few.  On the other hand, a
@dfn{construction background} is the part that yet visible, doesn't
affect the kid in any way --- its sole purpose is ornamental; torches
and windows are examples of this.  A @dfn{construction extension} is a
modifier which tells how the con looks or behaves.  For example, items
and door opening states are both expressed by them.  Any given
construction can have only one extension.  The valid extensions are:

@table @dfn
@item Item
This is a code indicating which item should be put on the construction.
Used by @code{FLOOR}.
@item Can't fall
This is a boolean indicating whether the construction should ignore
fall conditions.  Used by @code{LOOSE_FLOOR}.
@item Event
This is an integer indicating which door event the construction
triggers.  Used by @code{OPENER_FLOOR} and @code{CLOSER_FLOOR}.
@item Step
This is a integer indicating in which state, of a progressive set of
configurations, a construction is in.  Used by dynamic constructions
that don't use other extension.
@item Design
This is a code indicating which alternative graphical design should be
used to render the construction.  Used by the carpet constructions.
@end table

@section Foregrounds

Construction foregrounds have physical properties that determine how it
behaves in certain events and also how the kid is affected by the
interaction with them.

@table @dfn
@item Strictly traversable
This property means that the construction can't support the kid
vertically at its bottom, thus he falls immediately when trying to rest
on it.  Notice that cons having this property can't be @emph{hangable}.
@item Traversable
This property means that the construction can't @emph{indefinitely}
support the kid vertically at its bottom, thus he @emph{eventually}
falls when trying to rest on it.  Notice that @emph{strictly
traversable} is a particular case of this.
@item Collidable
This property means that the construction prevents the kid from passing
through it horizontally, thus he collides (often recoiling from the
impact) when trying to do so.
@item Semi-collidable
This property means that the construction is @emph{collidable} only
under certain circumstances.
@item Hangable
This property means that the kid can hang on the construction's bottom,
in case there is an @emph{strictly traversable} one at its side.
@item Depressible
This property means that the construction is sensible to pressure at its
top, thus some reaction is triggered when the kid exerts such pressure.
@item Trap
This property means that the construction might harm the kid.
@item Rigid
This property means that the construction can't be smashed by a falling
one, thus that which falls stops at the rigid con's top.
@item Dynamic
This property means that the construction has a set of distinct states
in which it can be in.  Such states matter for how the construction
looks and behaves.
@end table

It's possible that some of these properties may apply only under certain
conditions of the construction and/or the kid.

@subsection Floors

@dfn{Floors} make the ground above constructions the kid stands on.  All
of them are @emph{hangable}, except for @code{NO_FLOOR}.

@multitable @columnfractions .19 .15 .15 .51
  @headitem Code @tab Dungeon @tab Palace @tab Notes

  @item @code{NO_FLOOR}@footnote{The @dfn{no floor} con is called
  @dfn{empty} in the original game.}
  @tab
  @tab
  @tab This is an empty space.  This is @emph{strictly traversable} and
  uses no extension.

  @item @code{FLOOR}
  @tab @center @image{mininim-figures/d-floor}
  @tab @center @image{mininim-figures/p-floor}
  @tab This is a normal floor. This uses the @emph{item} extension.

  @item @code{BROKEN_FLOOR}@footnote{The @dfn{broken floor} is called
  @emph{debris} in the original game.}
  @tab @center @image{mininim-figures/d-broken-floor}
  @tab @center @image{mininim-figures/p-broken-floor}
  @tab As soon as a falling @code{LOOSE_FLOOR} encounters a @emph{rigid}
  construction, it disappears replacing the con @strong{over} that by a
  @code{BROKEN_FLOOR}.  In contrast, if it encounters a @emph{non-rigid}
  and @emph{non-traversable} construction, it disappears replacing that
  very con by a @code{BROKEN_FLOOR}.  Finally, if it encounters a
  @emph{non-rigid} but @emph{traversable} construction, it pass through,
  breaking over it in case the con is not @emph{strictly traversable}.
  This uses no extension.

  @item @code{SKELETON_FLOOR}
  @tab @center @image{mininim-figures/d-skeleton-floor}
  @tab @center @image{mininim-figures/p-skeleton-floor}
  @footnote{The original game has no palace version of the skeleton floor.}
  @tab This behaves like @code{FLOOR} but uses no extension.

  @item @code{LOOSE_FLOOR}@footnote{The @dfn{loose floor} is called
  @emph{loose board} in the original game.}
  @tab @center @image{mininim-figures/d-loose-floor}
  @tab @center @image{mininim-figures/p-loose-floor}
  @tab This is rendered as @code{FLOOR}, but shakes as the kid hits the
  ground, by falling (from above), or vertically jumping (from below).
  If the kid hits near enough it's released and falls.  It might harm
  the kid when falling over him.  This is @emph{traversable},
  @emph{depressible}, a @emph{trap}, @emph{dynamic} and uses the
  @emph{can't fall} extension.

  @item @code{SPIKES_FLOOR}
  @tab @center @image{mininim-figures/d-spikes-floor}
  @tab @center @image{mininim-figures/p-spikes-floor}
  @tab Spikes come out of it, killing the kid if he falls or step too
  fast over it.  This is a @emph{trap}, @emph{dynamic} and uses the
  @emph{step} extension (ranging from 0 to 9).  This gets activated as
  soon as the kid is in the same room and vertical place, and in the
  same or higher floor without a wall in between.  Guards can activate
  this as well.

  @item @code{OPENER_FLOOR}@footnote{The @dfn{opener floor} is called
  @emph{raise button} in the original game.}
  @tab @center @image{mininim-figures/d-opener-floor}
  @tab @center @image{mininim-figures/p-opener-floor}
  @tab This opens one or more doors.  This is @emph{depressible},
  @emph{dynamic} and uses the @emph{event} extension.

  @item @code{CLOSER_FLOOR}@footnote{The @dfn{closer floor} is called
  @emph{drop button} in the original game.}
  @tab @center @image{mininim-figures/d-closer-floor}
  @tab @center @image{mininim-figures/p-closer-floor}
  @tab  This closes one or more doors. This is @emph{depressible},
  @emph{dynamic} and uses the @emph{event} extension.

  @item @code{STUCK_FLOOR}@footnote{The @dfn{stuck floor} is called
  @emph {stuck button} in the original game.}
  @tab @center @image{mininim-figures/d-stuck-floor}
  @tab @center @image{mininim-figures/p-stuck-floor}
  @tab This is rendered like a pressed @code{CLOSER_FLOOR}, but it can't
  be unpressed.  This uses no extension.

  @item @code{HIDDEN_FLOOR}@footnote{The original game doesn't have a
  @code{HIDDEN_FLOOR} construction by itself.}
  @tab
  @tab
  @tab This is rendered as @code{NO_FLOOR}, but as soon as the kid
  presses it, it's replaced by @code{FLOOR}.  This is
  @emph{depressible} and uses no extension.
@end multitable

@subsection Pillars

@dfn{Pillars} are aesthetic supports for the constructions on the floor
above them.  All of them are @emph{hangable}, except for
@code{BIG_PILLAR_TOP}.  Pillars use no extension.

@multitable @columnfractions .25 .15 .15 .45
  @headitem Code @tab Dungeon @tab Palace @tab Notes

  @item @code{PILLAR}
  @tab @center @image{mininim-figures/d-pillar}
  @tab @center @image{mininim-figures/p-pillar}
  @tab This is @emph{rigid}.

  @item @code{BIG_PILLAR_TOP}
  @tab @center @image{mininim-figures/d-big-pillar-top}
  @tab @center @image{mininim-figures/p-big-pillar-top}
  @tab This should be placed above a @code{BIG_PILLAR_BOTTOM}.  This is
  @emph{strictly traversable} and @emph{rigid}.

  @item @code{BIG_PILLAR_BOTTOM}
  @tab @center @image{mininim-figures/d-big-pillar-bottom}
  @tab @center @image{mininim-figures/p-big-pillar-bottom}
  @tab This should be placed below a @code{BIG_PILLAR_TOP}.

  @item @code{ARCH_BOTTOM}
  @tab @center @image{mininim-figures/d-arch-bottom}
  @tab @center @image{mininim-figures/p-arch-bottom}
  @tab This should be placed below an @code{ARCH_TOP_MID}.
@end multitable

@subsection Wall

The @dfn{wall} is a solid constructs that separates sections of the
level.  It's @emph{collidable}, @emph{rigid} and uses no extension.

@multitable @columnfractions .20 .40 .40
  @headitem Code @tab Dungeon @tab Palace

  @item @code{WALL}
  @tab @center @image{mininim-figures/d-wall}
  @tab @center @image{mininim-figures/p-wall}
@end multitable

@subsection Doors

@dfn{Doors} are constructions that conditionally separate levels and
in-level sections.  Both door types are @emph{hangable}, @emph{dynamic}
and use the @emph{step} extension.  The extension determines the door
opening level, ranging from fully open (0) to fully closed.

@multitable @columnfractions .16 .20 .20 .44
  @headitem Code @tab Dungeon @tab Palace @tab Notes

  @item @code{DOOR}@footnote{The @dfn{door} is called @emph{gate} in the
  original game.}
  @tab @center @image{mininim-figures/d-door}
  @tab @center @image{mininim-figures/p-door}
  @tab This is @emph{semi-collidable} at right, as the kid might pass or
  not through it depending on the difference of the grid tip height and
  kid's movement height.  This is @emph{rigid} and its @emph{step}
  extension range from 0 to 47.

  @item @code{LEVEL_DOOR}@footnote{The @dfn{level door} is called simply
  @emph{exit} in the original game.  There it's divided into two
  constructions: @emph{exit left} and @emph{exit right}.}
  @tab @center @image{mininim-figures/d-level-door}
  @tab @center @image{mininim-figures/p-level-door}
  @tab Often the kid progress through levels entering these.  This can
  only be entered when fully open.  Its @emph{step} extension range from
  0 to 43.
@end multitable

@subsection Chopper

The @dfn{chopper}@footnote{The @dfn{chopper} is called @dfn{chomper} in
the original game.} can leave the kid in half.  It's a @emph{trap},
@emph{hangable at right}, @emph{rigid} and @emph{dynamic}.  It uses the
@emph{step} extension which range from 0 to 4 and 128 to 132 (bloody
counterpart).  It gets activated as soon as the kid is in the same room
and floor and there is no wall in between.  It doesn't get activated by
guards, but can kill them as well.  The chopper nullifies the
@emph{hangable at left} property of the construction above it.

@multitable @columnfractions .20 .40 .40
  @headitem Code @tab Dungeon @tab Palace

  @item @code{CHOPPER}
  @tab @center @image{mininim-figures/d-chopper}
  @tab @center @image{mininim-figures/p-chopper}
@end multitable

@subsection Mirror

The @dfn{mirror} reflects the kid's image and prevents him from passing
trough, except if he is able to perform a running jump, whatever the
side.  It's @emph{semi-collidable} at left, @emph{hangable at right},
@emph{rigid} and uses no extension.  The mirror nullifies the
@emph{hangable at left} property of the construction above it.

@multitable @columnfractions .20 .40 .40
  @headitem Code @tab Dungeon @tab Palace

  @item @code{MIRROR}
  @tab @center @image{mininim-figures/d-mirror}
  @tab @center @image{mininim-figures/p-mirror}
@end multitable

@subsection Carpets

@dfn{Carpets}@footnote{@dfn{Carpets} are called @emph{tapestry} in the
original game.} are ornamental constructions often placed over
@code{DOOR} cons.  They come in two flavors: @code{CARPET} and
@code{TCARPET}; the watershed difference being the @emph{traversable}
property, which the latter has but the former lacks.  Both are
@emph{collidable} at right, @emph{rigid} and make use of the
@emph{design} extension.  The @code{CARPET} construction is also
@emph{hangable at left}.  Also, carpets nullify the @emph{hangable at
left} property of the constructions at its top right corner and at its
right.

@multitable @columnfractions .15 .2 .2 .45
  @headitem Code @tab Dungeon @tab Palace @tab Notes

  @item @code{TCARPET}
  @tab @center @image{mininim-figures/d-tcarpet-00}
  @tab @center @image{mininim-figures/p-tcarpet-00}
  @tab These graphics are drawn for the @emph{design} @code{CARPET_00}.

  @item @code{TCARPET}
  @tab @center @image{mininim-figures/d-tcarpet-01}
  @tab @center @image{mininim-figures/p-tcarpet-01}
  @tab These graphics are drawn for the @emph{design} @code{CARPET_01}.

  @item @code{TCARPET}
  @tab @center @image{mininim-figures/d-arch-tcarpet-right-00}
  @tab @center @image{mininim-figures/p-arch-tcarpet-right-00}
  @tab These graphics are drawn for the design
  @code{ARCH_CARPET_RIGHT_00}.  This is intended to end an arch.  This
  should be placed at right of an @code{ARCH_TOP_MID}.

  @item @code{TCARPET}
  @tab @center @image{mininim-figures/d-arch-tcarpet-right-01}
  @tab @center @image{mininim-figures/p-arch-tcarpet-right-01}
  @tab These graphics are drawn for the design
  @code{ARCH_CARPET_RIGHT_01}.  This is intended to end an arch.  This
  should be placed at right of an @code{ARCH_TOP_MID}.

  @item @code{TCARPET}
  @tab @center @image{mininim-figures/d-arch-tcarpet-left}
  @tab @center @image{mininim-figures/p-arch-tcarpet-left}
  @tab These graphics are drawn for the design @code{ARCH_CARPET_LEFT}.
  This is intended to end an arch.  This should be placed two places to
  the left of an @code{ARCH_TOP_MID}.

  @item @code{CARPET}
  @tab @center @image{mininim-figures/d-carpet-00}
  @tab @center @image{mininim-figures/p-carpet-00}
  @tab These graphics are drawn for the @emph{design} @code{CARPET_00}.

  @item @code{CARPET}
  @tab @center @image{mininim-figures/d-carpet-01}
  @tab @center @image{mininim-figures/p-carpet-01}
  @tab These graphics are drawn for the @emph{design} @code{CARPET_01}.

  @item @code{CARPET}
  @tab @center @image{mininim-figures/d-arch-carpet-left}
  @tab @center @image{mininim-figures/p-arch-carpet-left}
  @tab These graphics are drawn for the design @code{ARCH_CARPET_LEFT}.
  This is intended to end an arch.  This should be placed two places to
  the left of an @code{ARCH_TOP_MID}.
@end multitable

@subsection Arches

@dfn{Arches}@footnote{@dfn{Arches} are called @dfn{lattices} in the
original game.} are ornamental constructions that can be indefinitely
chained together to make a structure that spans several rooms across.
They are @emph{strictly traversable}, @emph{rigid} and use no extension.

@multitable @columnfractions .2 .15 .15 .5
  @headitem Code @tab Dungeon
  @footnote{In the original game there is no dungeon version of arches.}
 @tab Palace @tab Notes

  @item @code{ARCH_TOP_MID}
  @tab @center @image{mininim-figures/d-arch-top-mid}
  @tab @center @image{mininim-figures/p-arch-top-mid}
  @tab This should be placed above an @code{ARCH_BOTTOM} and at left of an
  @code{ARCH_TOP_LEFT}, at right of an @code{ARCH_TOP_RIGHT}, or next to
  an @code{ARCH_TOP_SMALL}.

  @item @code{ARCH_TOP_SMALL}
  @tab @center @image{mininim-figures/d-arch-top-small}
  @tab @center @image{mininim-figures/p-arch-top-small}
  @tab This should be placed in between two @code{ARCH_TOP_MID}.

  @item @code{ARCH_TOP_LEFT}
  @tab @center @image{mininim-figures/d-arch-top-left}
  @tab @center @image{mininim-figures/p-arch-top-left}
  @tab This should be placed at left of an @code{ARCH_TOP_RIGHT}.

  @item @code{ARCH_TOP_RIGHT}
  @tab @center @image{mininim-figures/d-arch-top-right}
  @tab @center @image{mininim-figures/p-arch-top-right}
  @tab This should be placed at right of an @code{ARCH_TOP_LEFT}.
@end multitable

@section Backgrounds

Any combination of construction background and foreground is allowed,
but be aware that some may simply not look right, or even not make a
difference at all (like a torch behind a wall).

@multitable @columnfractions .12 .2 .2 .48
  @headitem Code @tab Dungeon @tab Palace @tab Notes

  @item @code{NO_BRICKS}
  @tab
  @tab
  @tab For the dungeon and palace this results in no graphics at all.

  @item @code{NO_BG}
  @tab
  @tab @center @image{mininim-figures/p-bricks-00}
  @tab For the dungeon this results in no graphics at all.  For the palace this
   results in the same graphics as @code{BRICKS_02}.

  @item @code{BRICKS_00}
  @tab @center @image{mininim-figures/d-bricks-00}
  @tab
  @tab For the palace this results in no graphics at all.

  @item @code{BRICKS_01}
  @tab @center @image{mininim-figures/d-bricks-01}
  @tab @center @image{mininim-figures/p-bricks-01}
  @tab For the palace this results in the same graphics as @code{BRICKS_03}

  @item @code{BRICKS_02}
  @tab @center @image{mininim-figures/d-bricks-02}
  @tab @center @image{mininim-figures/p-bricks-00}
  @tab For the palace this results in the same graphics as @code{NO_BG}.

  @item @code{BRICKS_03}
  @tab @center @image{mininim-figures/d-bricks-03}
  @tab @center @image{mininim-figures/p-bricks-01}
  @tab For the palace this results in the same graphics as @code{BRICKS_01}.

  @item @code{TORCH}@footnote{The fire sprites are mirrored
  horizontally depending on the level coordinates the torch has.
  This is not so in the original game.}
  @tab @center @image{mininim-figures/d-torch}
  @tab @center @image{mininim-figures/p-torch}
  @tab

  @item @code{WINDOW}
  @tab @center @image{mininim-figures/d-window}
  @tab @center @image{mininim-figures/p-window}
  @tab

  @item @code{BALCONY}@footnote{The background stars are randomly
  positioned and animated.  In the original game, all balconies have
  non-animated white stars in fixed positions.}
  @tab @center @image{mininim-figures/d-balcony}
  @tab @center @image{mininim-figures/p-balcony}
@end multitable


@section Items

The item extension is used only by @code{FLOOR}.  Items are placed over
the floor construction they belong to and animated.  They can be caught
by the kid by pressing the shift key.

@multitable @columnfractions .3 .15 .55
  @headitem Code @tab Graphics @tab Notes

  @item @code{NO_ITEM}
  @tab
  @tab For the dungeon and palace this results in no graphics at all.

  @item @code{EMPTY_POTION}
  @tab @center @image{mininim-figures/empty-potion}
  @tab This potion has no bubbles and no effect.

  @item @code{SMALL_LIFE_POTION}
  @tab @center @image{mininim-figures/small-life-potion}
  @tab This potion has red bubbles and recovers one life point.

  @item @code{BIG_LIFE_POTION}
  @tab @center @image{mininim-figures/big-life-potion}
  @tab This potion has red bubbles, adds one life point container and
  recover all life points.

  @item @code{SMALL_POISON_POTION}
  @tab @center @image{mininim-figures/small-poison-potion}
  @tab This potion has blue bubbles and takes one life point.  It has
  the same graphics as @code{ACTIVATION_POTION}.

  @item @code{BIG_POISON_POTION}
  @tab @center @image{mininim-figures/big-poison-potion}
  @tab This potion has blue bubbles and takes all life point,
  effectively killing the kid.

  @item @code{FLOAT_POTION}
  @tab @center @image{mininim-figures/float-potion}
  @tab This potion has green bubbles and allows the kid to levitate,
  effectively making long falls harmless.

  @item @code{FLIP_POTION}
  @tab @center @image{mininim-figures/flip-potion}
  @tab This potion has yellow bubbles and flips the screen horizontally,
  vertically or both, depending on its level coordinates.@footnote{In
  the original game, flip potions only invert the screen vertically and
  are drawn as @code{FLOAT_POTION}, that is, with green bubbles.}
  Drinking another one undo this effect.

  @item @code{ACTIVATION_POTION}
  @tab @center @image{mininim-figures/activation-potion}
  @tab This potion has the same graphics as @code{SMALL_POISON_POTION}
  and is used to activate a construction.@footnote{In the original game
  the @emph{activation potion} is designed to be used in the potion
  level, a copy protection mechanism employed to stop people from
  sharing.  @strong{MININIM is free software}, and we repudiate this
  kind of measure.  Thus here @emph{activation potions} may be used to
  handicap the kid, but certainly won't be used to do so to you nor to
  your friends.}

  @item @code{SWORD}@footnote{The sword graphics is mirrored
  horizontally depending on its level coordinates.  This is not so in
  the original game.}
  @tab @center @image{mininim-figures/sword}
  @tab This allows the kid to enter fight mode.  The sword
  blinks from time to time.
@end multitable



@c --- Movements;
@node Movements
@chapter Movements
@cindex movements

In his journey to save the princess, the kid has to endure several
levels full of challenging traps and skilled opponents.  Run, walk,
turn, crouch, jump, hang, climb, take the sword, attack and defend are
some of the kid's movements at your disposal to help him make his way to
the princess tower.  Although, this is a relatively large set of
movements, basically all these are accomplished by some combination of
the directional and shift keys, often conditioned to the current kid's
state.  This chapter explains in detail all possible movements of the
kid.

There are six modes of movement: @dfn{normal}, @dfn{crouch}, @dfn{run},
@dfn{hang}, @dfn{fall} and @dfn{fight}.  The mode the kid is in is the
foremost element determining how the input is translated into kid's
movements.

Quite a few movements might culminate in the kid hanging on a
construction.  In order to describe the conditions in which that may
happen, it's necessary to define the concept of @emph{hangable place}.

@cartouche
@noindent@strong{Hangable place:} we say a @emph{place} the kid is in is
@dfn{hangable} for him, if (and only if) the construction above it is
@emph{strictly traversable} and the con adjacent to that, in the
direction the kid faces, is @emph{hangable} in the opposite direction.
@end cartouche

Notice that (whenever it makes sense) for any move, holding its
triggering keys continues or repeats the movement.@footnote{That's not
so for the original game, in which for many situations you have to
release and press the keys again to have the movement repeated.}  Often,
when transitioning from a movement to another that shares some keys, you
can keep the common keys pressed and the kid will just do the right
thing.

It's also worth nothing that the kid responds to the input in real time,
that is, in the next animation cycle.@footnote{That's not so for the
original game, in which the kid delays one cycle to respond.}


@section Normal

The movement mode at the beginning of each level is normal.  While in it
the kid stands at rest.

@center @image{mininim-figures/kid-normal-right}


@subsection Turn

If you press the horizontal key in the opposite direction the kid is
facing, he turns and then faces the opposite direction likewise.

@center @image{mininim-figures/kid-normal-right} @arrow{} @image{mininim-figures/kid-turn} @arrow{} @image{mininim-figures/kid-normal-left}


@subsection Vertical jump

Pressing the up key, makes the kid perform a vertical jump.

@center @image{mininim-figures/kid-normal-left} @arrow{} @image{mininim-figures/kid-vjump}

In case the construction above him is @emph{strictly traversable} but he
isn't in a @emph{hangable place}, he performs a long vertical jump and
comes back to the @strong{exact} same position he was before the
jump.@footnote{This is not so in the original game, where he moves a
little bit forward at each vertical jump.}

@center @image{mininim-figures/kid-vjump} @arrow{} @image{mininim-figures/kid-normal-left}

In case he's in a @emph{hangable place}, he performs a long vertical
jump (after coming close enough to the edge if he isn't already) and
hangs for a brief period of time.

@center @image{mininim-figures/kid-vjump-floor-no-floor} @arrow{} @image{mininim-figures/kid-hang-left}

In case the place behind him is @emph{hangable}, he backs off so the
situation fits the previous paragraph description.

@center @image{mininim-figures/kid-vjump-floor} @arrow{} @image{mininim-figures/kid-vjump-floor-no-floor}

If holding the shift key, the kid enters in @emph{hang mode}, otherwise
he just drops back to the ground.

@center @image{mininim-figures/kid-hang-left} @arrow{} @image{mininim-figures/kid-vjump-floor-no-floor}

In case the construction above him is not @emph{strictly traversable}
and the place behind him is not @emph{hangable}, he performs a short
vertical jump and then comes back to the exact same position he was
before the jump.

@center @image{mininim-figures/kid-vjump-normal-floor-floor} @arrow{} @image{mininim-figures/kid-vjump-vjump-floor-floor} @arrow{} @image{mininim-figures/kid-vjump-normal-floor-floor}


@subsection Normal jump

Pressing the up and the horizontal keys at once makes the kid jump
forward.  The kid can jump over (up to) two @emph{places} across without
falling.

@center @image{mininim-figures/kid-normal-left} @arrow{} @image{mininim-figures/kid-jump}

In midair, if he's in a @emph{hangable place}, holding shift and the
horizontal key in the direction he's facing makes him hang on the
construction and enter @emph{hang mode}.@footnote{The original game has
no such movement.}

@center @image{mininim-figures/kid-jump-floor-no-floor} @arrow{} @image{mininim-figures/kid-hang-left}

If he's in a @emph{hangable place} for the opposite direction, holding
shift and the horizontal key in that direction makes him turn in midair,
hang on the construction and enter @emph{hang mode}.@footnote{The
original game has no such movement.}

@center @image{mininim-figures/kid-jump-no-floor-floor} @arrow{} @image{mininim-figures/kid-hang-right}


@subsection Walk

Pressing the horizontal key in the same direction the kid is facing
while holding the shift key, makes him walk carefully.

@center @image{mininim-figures/kid-normal-left} @arrow{} @image{mininim-figures/kid-walk}

He always safely stops before a collision, fall, loose floor, closer
floor and chopper blade.

@center @image{mininim-figures/kid-walk-wall} @arrow{} @image{mininim-figures/kid-normal-wall}

@center @image{mininim-figures/kid-walk-no-floor} @arrow{} @image{mininim-figures/kid-normal-no-floor}

@center @image{mininim-figures/kid-walk-loose-floor} @arrow{} @image{mininim-figures/kid-normal-loose-floor}

@center @image{mininim-figures/kid-walk-closer-floor} @arrow{} @image{mininim-figures/kid-normal-closer-floor}

@center @image{mininim-figures/kid-walk-chopper} @arrow{} @image{mininim-figures/kid-normal-chopper}

If the kid is just before a @emph{traversable} construction or a closer
floor@footnote{The kid doesn't misstep for a closer floor in the
original game.}, he misstep and gets back to his original position, as a
warning of the eminent danger.

@center @image{mininim-figures/kid-misstep-no-floor} @arrow{} @image{mininim-figures/kid-normal-no-floor}

@center @image{mininim-figures/kid-misstep-loose-floor} @arrow{} @image{mininim-figures/kid-normal-loose-floor}

@center @image{mininim-figures/kid-misstep-closer-floor} @arrow{} @image{mininim-figures/kid-normal-closer-floor}

If you insist and try again, he'll obey and suffer the consequences ---
so, be careful!

@section Crouch

If you press the down key the kid crouches.

@center @image{mininim-figures/kid-normal-left} @arrow{} @image{mininim-figures/kid-couch}

The kid stays crouched as long as you keep the down key pressed.
Releasing the down key makes the kid stand up again.

@center @image{mininim-figures/kid-uncouch} @arrow{} @image{mininim-figures/kid-normal-left}

@subsection Crouching jump

If you press the horizontal key in the same direction the kid is facing,
without releasing the down key, the kid performs little crouching jumps
forward.

@center @image{mininim-figures/kid-couch} @arrow{} @image{mininim-figures/kid-couch-forward} @arrow{} @image{mininim-figures/kid-couch}



@section Run

Pressing the horizontal key in the same direction the kid is facing,
makes him start to run.@footnote{Unless he is facing a @emph{collidable}
construction with at most one place of distance, in which case he
performs a @emph{walk}.  Notice that in the original game the threshold
is lower.}

@center @image{mininim-figures/kid-normal-left} @arrow{} @image{mininim-figures/kid-start-run}

He runs as long as you keep the horizontal key pressed.

@center @image{mininim-figures/kid-start-run} @arrow{} @image{mininim-figures/kid-run}

Releasing it makes him stop, and go back to the normal stage.

@center @image{mininim-figures/kid-stop-run} @arrow{} @image{mininim-figures/kid-normal-left}

@subsection Running jump

In case you press the up key while running, he makes a running jump.
The running jump has a reach greater than the @emph{normal jump}.  The
kid can jump over (up to) three @emph{places} across without falling.

@center @image{mininim-figures/kid-run} @arrow{} @image{mininim-figures/kid-run-jump}

When the kid lands on ground, he continues to run if you keep the
horizontal key pressed.

@center @image{mininim-figures/kid-run-jump} @arrow{} @image{mininim-figures/kid-run}

This implies that, if you keep both keys pressed the movement repeats
indefinitely.

@center @image{mininim-figures/kid-run} @arrow{} @image{mininim-figures/kid-run-jump} @arrow{} @image{mininim-figures/kid-run} @arrow{} @image{mininim-figures/kid-run-jump}

In midair, if he's in a @emph{hangable place}, holding shift and the
horizontal key in the direction he's facing makes him hang on the
construction and enter @emph{hang mode}.@footnote{The original game has
no such movement.}

@center @image{mininim-figures/kid-run-jump-floor-no-floor} @arrow{} @image{mininim-figures/kid-hang-left}

If he's in a @emph{hangable place} for the opposite direction, holding
shift and the horizontal key in that direction makes him turn in midair,
hang on the construction and enter @emph{hang mode}.@footnote{The
original game has no such movement.}

@center @image{mininim-figures/kid-run-jump-no-floor-floor} @arrow{} @image{mininim-figures/kid-hang-right}

@subsection Running crouch

If you press the down key while running, he crouches, slipping with some
momentum, and then he enters @emph{crouch mode}.

@center @image{mininim-figures/kid-run} @arrow{} @image{mininim-figures/kid-couch}

@subsection Running turn

If you press the horizontal key in the opposite direction the kid is
facing while running, he turns without stopping and continues to run to
the opposite direction if you keep the horizontal key pressed.

@center @image{mininim-figures/kid-run} @arrow{} @image{mininim-figures/kid-turn-run} @arrow{} @image{mininim-figures/kid-run-right}

@subsection Hang

There are two modes of hanging: @emph{free} and @emph{non-free}.  The
kid @dfn{hangs free} when the construction below the hanged one is not
collidable at the direction of hanging.  Otherwise he @dfn{hangs
non-free}.  While hanging free the kid swings back and forth like a
pendulum.  However, there is a limit for how much time he can support
his own weight, after which he drops from the construction.  Releasing
the shift key in the meantime has the same effect.

@center @image{mininim-figures/kid-hang-left} @arrow{} @image{mininim-figures/kid-hang-left-forth} @arrow{} @image{mininim-figures/kid-hang-left} @arrow{} @image{mininim-figures/kid-hang-left-back}

The kid will fall either vertically aligned with the @emph{hangable
place} or with the hanged con's place, depending upon which his feet are
aligned to when he leaves the hanged construction.  @footnote{It's not
possible to make such movements in the original game, because there the
kid always falls aligned with a @emph{non-traversable} construction
below him, in case there is one.}

@center @image{mininim-figures/kid-hang-free-fall}

@section Fight

If the kid has got the sword, the return key @strong{takes the sword}
and puts him in fight mode.

@center @image{mininim-figures/kid-normal-left} @arrow{} @image{mininim-figures/kid-take-sword} @arrow{} @image{mininim-figures/kid-sword-normal}

Pressing the horizontal key in the same direction kid is facing, makes
him @strong{walk forward}.

@center @image{mininim-figures/kid-sword-normal} @arrow{} @image{mininim-figures/kid-sword-walkf}

Likewise if you press in the opposite direction, he @strong{goes
backward}.

@center @image{mininim-figures/kid-sword-normal} @arrow{} @image{mininim-figures/kid-sword-walkb}

If you press the up key, the kid makes the @strong{defense movement}.

@center @image{mininim-figures/kid-sword-normal} @arrow{} @image{mininim-figures/kid-sword-defense}

The shift key make him @strong{attack}.

@center @image{mininim-figures/kid-sword-normal} @arrow{} @image{mininim-figures/kid-sword-attack}

Finally you can make him @strong{keep the sword} and return to normal
mode by pressing the down key.

@center @image{mininim-figures/kid-sword-normal} @arrow{} @image{mininim-figures/kid-keep-sword} @arrow{} @image{mininim-figures/kid-normal-left}


@c 
@c @c --- Preface;
@c @node Preface
@c @unnumbered Preface
@c @cindex introduction

@c <Here comes an introduction to MININIM and its documentation>



@c 
@c @c --- Overview;
@c @node Overview
@c @chapter Overview
@c @include README.texi




@c 
@c @c --- Release;
@c @node Release
@c @chapter Release

@c In this chapter one can find information that are specific to the
@c current release or subject to change between releases.  It
@c presents the features this package acquired over time, problems that
@c affect its overall usage and what possibly could happen to it --- by
@c our wishes --- in the future.  Last but not least, people whose
@c contribution for this package are noteworthy are acknowledged.

@c @menu
@c Present and Future:
@c * Announcement::  Published announcement message of this new release;
@c * News::          User-visible changes since previous versions;
@c * To do::         Features we want to see implemented someday;

@c People:
@c * Authors::  List of major contributors;
@c * Thanks::   List of minor contributors;
@c * Donors::   People who supported the development by donations;
@c @end menu




@c 
@c @c --- News;
@c @page
@c @node Announcement
@c @section Announcement
@c @include ANNOUNCEMENT.texi




@c 
@c @c --- News;
@c @page
@c @node News
@c @section News
@c @include NEWS.texi




@c 
@c @c --- To do;
@c @page
@c @node To do
@c @section To do
@c @include TODO.texi




@c 
@c @c --- Authors;
@c @page
@c @node Authors
@c @section Authors
@c @include AUTHORS.texi




@c 
@c @c --- Thanks;
@c @page
@c @node Thanks
@c @section Thanks
@c @include THANKS.texi




@c 
@c @c --- Donors;
@c @page
@c @node Donors
@c @section Donors
@c @include DONORS.texi




@c 
@c @c --- GNU Free Documentation License;
@c @node GNU Free Documentation License
@c @appendix GNU Free Documentation License
@c @cindex license documentation
@c @cindex documentation license
@c @cindex license of manual
@c @cindex manual license
@c @cindex copying documentation
@c @cindex documentation copying
@c @cindex copying manual
@c @cindex manual copying

@c @include gnu-free-documentation-license.texi




@c 
@c @c --- The GNU Manifesto;
@c @node The GNU Manifesto
@c @appendix The GNU Manifesto
@c @include the-gnu-manifesto.texi




@c 
@c @c --- The GNU Project;
@c @node The GNU Project
@c @appendix The GNU Project
@c @include the-gnu-project.texi




@c 
@c @c --- Linux and the GNU system;
@c @node Linux and the GNU system
@c @appendix Linux and the GNU system
@c @include linux-and-the-gnu-system.texi




@c 
@c @c --- Why Software Should Not Have Owners;
@c @node Why Software Should Not Have Owners
@c @appendix Why Software Should Not Have Owners
@c @include why-software-should-not-have-owners.texi




@c 
@c @c --- Why Free Software Needs Free Documentation;
@c @node Why Free Software Needs Free Documentation
@c @appendix Why Free Software Needs Free Documentation
@c @include why-free-software-needs-free-documentation.texi





@c --- Index;
@node Index
@unnumbered Index

@printindex cp

@bye
